#‡πÉ‡∏™‡πà prop ‡πÉ‡∏´‡πâ‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤

import streamlit as st
import cv2
import numpy as np
from PIL import Image

st.title("üß¢ AI ‡πÉ‡∏™‡πà‡∏´‡∏°‡∏ß‡∏Å / ‡πÅ‡∏ß‡πà‡∏ô / ‡∏´‡∏π‡πÅ‡∏°‡∏ß ‡∏ö‡∏ô‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤")

uploaded_file = st.file_uploader("üì∏ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤", type=["jpg", "jpeg", "png"])
if uploaded_file:
    image = Image.open(uploaded_file).convert("RGB")
    img = np.array(image)
    gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)

    face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")
    faces = face_cascade.detectMultiScale(gray, 1.1, 5)

    if len(faces) > 0:
        x, y, w, h = faces[0]

        # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å accessory
        accessory_option = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á", ["‡∏´‡∏°‡∏ß‡∏Å", "‡πÅ‡∏ß‡πà‡∏ô‡∏ï‡∏≤", "‡∏´‡∏π‡πÅ‡∏°‡∏ß"])
        accessory_path = f"assets/{accessory_option}.png"
        accessory = Image.open(accessory_path).convert("RGBA")

        # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î accessory ‡πÉ‡∏´‡πâ‡∏û‡∏≠‡∏î‡∏µ‡∏Å‡∏±‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤
        accessory_width = w
        accessory_height = int(accessory.height * (accessory_width / accessory.width))
        accessory = accessory.resize((accessory_width, accessory_height))

        # ‡∏ß‡∏≤‡∏á accessory ‡∏ö‡∏ô‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤
        img_pil = Image.fromarray(img).convert("RGBA")
        if accessory_option == "‡∏´‡∏°‡∏ß‡∏Å":
            position = (x, y - accessory_height + 20)
        elif accessory_option == "‡πÅ‡∏ß‡πà‡∏ô‡∏ï‡∏≤":
            position = (x, y + int(h / 100))
        else:  # ‡∏´‡∏π‡πÅ‡∏°‡∏ß
            position = (x, y - accessory_height + 35)
        img_pil.paste(accessory, position, mask=accessory)

        st.image(img_pil, caption="üéâ ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß", use_container_width=True)

        # ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û
        from io import BytesIO
        buf = BytesIO()
        img_pil.save(buf, format="PNG")
        st.download_button("üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û", data=buf.getvalue(), file_name="decorated_image.png", mime="image/png")
    else:
        st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ô‡∏†‡∏≤‡∏û ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà")
st.info ("made by Thanuchsit Somnuk")        
